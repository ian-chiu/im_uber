swagger: '2.0'
info:
  description: This is a API documentation for i'm uber
  version: 1.0.0
  title: I'm Uber 

# tags are used for organizing operations
tags:
- name: users
  description: called by users after logged in
- name: admins
  description: Operations available to regular administrations

paths:
  /users/me/tickets:
    post:
      tags:
      - users
      summary: join a ride
      parameters:
      - in: body
        name: inventoryItem
        description: Inventory item to add
        schema:
          $ref: '#/definitions/Ticket'
      responses:
        201:
          description: item created
        400:
          description: invalid input, object invalid
        409:
          description: an existing item already exists
    get:
      tags:
      - users
      summary: get my tickets
      responses:
        200:
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/Ticket'
        400:
          description: invalid input, object invalid
        409:
          description: an existing item already exists
  /users/me/tickets/{ticketId}:
    delete:
      tags:
      - users
      summary: quit a ride
      parameters:
        - in: path
          name: ticketId
          type: string
          format: uuid
          required: true
          description: the ticket user want to delete
      responses:
        200:
          description: OK
    
  /rides/{rideId}:
    get:
      tags:
      - users
      summary: driver get a ride
      operationId: getARide
      description: |
        Get a ride
      produces:
      - application/json
      parameters:
      - in: path
        name: rideId
        type: string
        format: uuid
        required: true
        description: Numeric ID of the user to get
      responses:
        200:
          description: result of a ride
          schema:
            type: array
            items:
              $ref: '#/definitions/Ride'
            example:
            - departure_time: '2023-06-26T06:42:51.800Z'
              stops:
              - name: "臺積電五廠"
                latitude: 24.774451062456148
                longitude: 120.99816376901293
                id: 0
              - name: "交大門口土地公廟"
                latitude: 24.78709056239894
                longitude: 120.99749874432568
                id: 1
              - name: "新竹市立動物園"
                latitude: 24.80044826523704
                longitude: 120.97987888212046
                id: 2
              - name: "新竹轉運站"
                latitude: 24.801285760203864
                longitude: 120.97241441651721
                id: 3
              driver:
                id: d290f1ee-6c54-4b01-90e6-d701748f0851
                name: Peter
                phone: '0900000000'
              tickets:
              - user:
                  id: d290f1ee-6c54-4b01-90e6-d701748fqwer
                  name: Alice
                  phone: '0900000000'
                from:
                  name: "臺積電五廠"
                  latitude: 24.774451062456148
                  longitude: 120.99816376901293
                  id: 0
                to:
                  name: "新竹轉運站"
                  latitude: 24.801285760203864
                  longitude: 120.97241441651721
                  id: 3
                departure_time: '2023-05-26T06:42:51.801Z'
                arrival_time: '2023-05-26T06:42:51.801Z'
                price: 200
              - user:
                  id: d290f1ee-6c54-4b01-90e6-d701748fuiop
                  name: Bob
                  phone: '0900000000'
                ride: string
                from:
                  name: "臺積電五廠"
                  latitude: 24.774451062456148
                  longitude: 120.99816376901293
                  id: 0
                to:
                  name: "交大門口土地公廟"
                  latitude: 24.78709056239894
                  longitude: 120.99749874432568
                  id: 1
                departure_time: '2023-05-26T06:42:51.801Z'
                arrival_time: '2023-05-26T06:42:51.801Z'
                price: 100
              vehicle:
                driver:
                  id: d290f1ee-6c54-4b01-90e6-d701748f0851
                  name: Peter
                  phone: '0900000000'
                license_plate: ABC-1122
                seats: 5
              status: 0
  /rides:
    get:
      tags:
      - users
      summary: search for available rides
      parameters:
      - in: query
        name: departure_time
        description: user expected depature time
        type: string
        format: datetime
      - in: query
        name: from
        description: user expected depature stop
        type: string
        format: uuid
      - in: query
        name: to
        description: user expected arrival stop
        type: string
        format: uuid
      - in: query
        name: offset
        type: integer
        description: The number of items to skip before starting to collect the result set
      - in: query
        name: limit
        type: integer
        description: The numbers of items to return
      responses:
        200:
          description: item created
          schema:
            type: array
            items:
              $ref: '#/definitions/Ticket'
            example:
            - departure_time: '2023-06-26T06:42:51.800Z'
              stops:
              - name: "臺積電五廠"
    put:
      tags:
      - users
      summary: update a ride
      operationId: putARide
      description: |
        Get a ride
      responses:
        200:
          description: result of a ride
    post:
      tags:
      - users
      summary: create a ride
      operationId: postARide
      description: |
        Get a ride
      responses:
        200:
          description: result of a ride
  /stops:
    get:
      tags:
      - users
      summary: all available stops a driver can pickup or drop off passengers
      parameters:
      - in: query
        name: searchString
        description: pass an optional search string for looking up inventory
        required: false
        type: string
      - in: query
        name: skip
        description: number of records to skip for pagination
        type: integer
        format: int32
        minimum: 0
      - in: query
        name: limit
        description: maximum number of records to return
        type: integer
        format: int32
        minimum: 0
        maximum: 50
      responses:
        200:
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/Stop'
            example:
            - name: "新竹高鐵站"
              latitude: 24.807282359338483
              longitude: 121.04050172232557
            - name: "臺積電五廠"
              latitude: 24.774451062456148
              longitude: 120.99816376901293
            - name: "金山街塔"
              latitude: 24.777044600209447
              longitude: 121.02514493860002
            - name: "新竹市立動物園"
              latitude: 24.80044826523704
              longitude: 120.97987888212046
            - name: "交大門口土地公廟"
              latitude: 24.78709056239894
              longitude: 120.99749874432568
            - name: "新竹轉運站"
              latitude: 24.801285760203864
              longitude: 120.97241441651721
    post:
      tags:
      - admins
      summary: adds an inventory item
      operationId: addInventory
      description: Adds an item to the system
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: inventoryItem
        description: Inventory item to add
        schema:
          $ref: '#/definitions/Stop'
      responses:
        201:
          description: item created
        400:
          description: invalid input, object invalid
        409:
          description: an existing item already exists
definitions:
  User:
    type: object
    required:
    - id
    - name
    - phone
    - email
    properties:
      id:
        type: string
        format: uuid
        example: d290f1ee-6c54-4b01-90e6-d701748f0851
      name:
        type: string
        example: Peter
      phone:
        type: string
        example: '0900000000'
  Vehicle:
    required:
    - driver
    - license_plate
    - seats
    properties:
      driver:
        $ref: '#/definitions/User'
      license_plate:
        type: string
        example: 'ABC-1122'
      seats:
        type: number
        example: 5
  Stop:
    required:
    - name
    - latitude
    - longitude
    properties:
      name:
        type: string
        example: "新竹高鐵站"
      latitude:
        type: number
        example: 100.2
      longitude:
        type: number
        example: 10.5
  Ticket:
    properties:
      user:
        $ref: '#/definitions/User'
      ride:
        $ref: '#/definitions/Ride'
      from:
        $ref: '#/definitions/Stop'
      to:
        $ref: '#/definitions/Stop'
      departure_time:
        type: string
        format: date-time
      arrival_time:
        type: string
        format: date-time
      price:
        type: number
        example: 100
  Ride:
    required:
    - tickets
    - stops
    - vehicle
    - departure_time
    - status
    properties:
      departure_time:
        type: string
        format: date-time
      stops:
        type: array
        items:
          $ref: '#/definitions/Stop'
      tickets:
        type: array
        items:
          $ref: '#/definitions/Ticket'
      vehicle:
        $ref: '#/definitions/Vehicle'
      status:
        type: integer
        description: "0: to_be_done, 1: in_progress, 2: finished"

# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /MONEY678678/im_uber/1.0.0
schemes:
 - https